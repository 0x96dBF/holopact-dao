#!/usr/bin/env python3

import argparse
import os
import subprocess
import sys


def make_parser():
    # Make parser object
    p = argparse.ArgumentParser(description=
        """
        Deploy holopact development environment
        """,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    
    subparser = p.add_subparsers(help="command", dest="command")

    dev_parser = subparser.add_parser("dev",
                                      help="compile and migrate contracts locally")
    dev_parser.add_argument("-c", "--console", action="store_true",
                            help="attach to truffle development console")
    dev_parser.add_argument("-s", "--shell", action="store_true",
                            help="attach to dev box shell")
    dev_parser.add_argument("-b", "--build", action="store_true",
                            help="rebuild docker containers")

    test_parser = subparser.add_parser("test",
                                       help="run test suites")

    return(p)


if __name__ == '__main__':

    if sys.version_info<(3,0,0):
        sys.stderr.write("You need python 3.0 or later to run this script\n")
        sys.exit(1)

    abspath = os.path.abspath(__file__)
    dname = os.path.dirname(abspath)
    os.chdir(dname)

    try:
        p = make_parser()
        args = p.parse_args()

        if args.command == "dev":
            run_ganache = ["docker-compose",
                          "-p", "holopact",
                          "--env-file", "../deployments/dev/dev.env",
                          "-f", "../deployments/dev/docker-compose.ganache.yml",
                          "up", "-d"]
            if args.build:
                run_ganache += ["--build"]
            subprocess.call(run_ganache)

            if args.build:
                build_truffle = ["docker-compose",
                                 "-p", "holopact",
                                 "-f", "../deployments/dev/docker-compose.dev.yml",
                                 "build", "--no-cache"]
                subprocess.call(build_truffle)

            run_truffle = ["docker-compose",
                           "-p", "holopact",
                           "--env-file", "../deployments/dev/dev.env",
                           "-f", "../deployments/dev/docker-compose.dev.yml",
                           "run",
                           "--rm",
                           "dev-box"]

            if args.console:
                run_truffle += ["/scripts/launch-console.sh"]
            elif args.shell:
                run_truffle += ["/bin/sh"]

            subprocess.call(run_truffle)
        elif args.command == "test":
            print("running tests...")
            run_ganache = ["docker-compose",
                          "-p", "holopact",
                          "--env-file", "../deployments/dev/dev.env",
                          "-f", "../deployments/dev/docker-compose.ganache.yml",
                          "up", "-d"]
            subprocess.call(run_ganache)
            print("build complete")
            run_tests = ["docker-compose",
                         "-p", "holopact",
                         "--env-file", "../deployments/dev/dev.env",
                         "-f", "../deployments/dev/docker-compose.dev.yml",
                         "-f", "../deployments/dev/docker-compose.test.yml", 
                         "run", "--rm",
                         "test-box"]
            subprocess.call(run_tests)
        else:
            raise Exception()
    except Exception:
        p.print_help()
